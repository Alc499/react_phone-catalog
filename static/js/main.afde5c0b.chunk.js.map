{"version":3,"sources":["api/getData.js","components/PhoneCatalog.js","components/PhonesPage.js","components/HomePage.js","components/PhoneDetails.js","components/PhoneDetailsPage.js","components/Basket.js","components/NotFoundPage.js","App.js","index.js"],"names":["getData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","type","_args","arguments","wrap","_context","prev","next","length","undefined","abrupt","fetch","concat","then","response","json","stop","apply","this","PhoneCatalog","phones","addPhone","react_default","createElement","className","map","phone","key","id","react_router_dom","to","src","imageUrl","alt","name","snippet","onClick","PhonesPage","state","isLoaded","filterValue","currentPage","phonesPerPage","loadData","sent","_this","setState","handleFilter","event","value","target","toLowerCase","filterPhones","filter","includes","trim","getSortedPhones","prevState","toConsumableArray","sort","b","age","localeCompare","_this$state","visiblePhones","firstIndex","lastIndex","htmlFor","onChange","components_PhoneCatalog","slice","props","react_loader_spinner_default","color","height","width","React","Component","HomePage","PhoneDetails","imageNumber","switchImage","index","_this2","_this$props","details","images","description","image","classnames","selected","PhoneDetailsPage","phoneDetails","error","phoneId","t0","Fragment","components_PhoneDetails","Basket","selectedPhones","removePhone","quantity","Home","App","currentPhone","find","objectSpread","exact","activeClassName","react_router","path","component","render","components_PhonesPage","match","components_PhoneDetailsPage","params","components_Basket","NotFoundPage","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.afde5c0b.chunk.js","sourcesContent":["const getData = async(type = '') => {\n  const baseUrl = `https://mate-academy.github.io`;\n  const phoneUrl = `/phone-catalogue-static/api/phones`;\n\n  return fetch(`${baseUrl}${phoneUrl}${type}.json`)\n    .then(response => response.json());\n};\n\nexport default getData;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PhoneCatalog = ({ phones, addPhone }) => (\n  <div className=\"phones-catalog\">\n    <h1>Phones</h1>\n\n    {phones.map(phone => (\n      <article\n        key={phone.id}\n        className=\"phone-card\"\n      >\n        <Link to={`/phones/${phone.id}`}>\n          <img\n            src={phone.imageUrl}\n            alt=\"phone\"\n            className=\"phone-card__img\"\n          />\n        </Link>\n\n        <Link to={`/phones/${phone.id}`}>\n          {phone.name}\n        </Link>\n\n        <p>{phone.snippet}</p>\n\n        <button\n          type=\"button\"\n          className=\"cart-btn\"\n          onClick={() => addPhone(phone)}\n        >\n          Add to basket\n        </button>\n      </article>\n    ))}\n  </div>\n);\n\nPhoneCatalog.propTypes = {\n  phones: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addPhone: PropTypes.func.isRequired,\n};\n\nexport default PhoneCatalog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\n\nimport getData from '../api/getData';\nimport PhoneCatalog from './PhoneCatalog';\n\nclass PhonesPage extends React.Component {\n  state = {\n    phones: [],\n    isLoaded: false,\n    filterValue: '',\n    currentPage: 1,\n    phonesPerPage: 10,\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = async() => {\n    const phones = await getData();\n\n    this.setState({\n      phones,\n      isLoaded: true,\n    });\n  }\n\n  handleFilter = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      filterValue: value.toLowerCase(),\n    });\n  }\n\n  filterPhones = (filterValue) => {\n    const { phones } = this.state;\n\n    return phones.filter(\n      phone => (\n        (phone.id + phone.snippet)\n          .toLowerCase()\n          .includes(filterValue.trim())\n      ),\n    );\n  }\n\n  getSortedPhones = (event) => {\n    const { value } = event.target;\n\n    switch (value) {\n      case 'age':\n        return this.setState(prevState => ({\n          phones: [...prevState.phones]\n            .sort((a, b) => a.age - b.age),\n        }));\n      case 'alphabet':\n        return this.setState(prevState => ({\n          phones: [...prevState.phones]\n            .sort((a, b) => a.name.localeCompare(b.name)),\n        }));\n      default:\n        return this.setState(prevState => ({\n          phones: prevState.phones,\n        }));\n    }\n  }\n\n  render() {\n    const {\n      isLoaded,\n      filterValue,\n      currentPage,\n      phonesPerPage,\n    } = this.state;\n\n    const visiblePhones = this.filterPhones(filterValue);\n    const firstIndex = currentPage * phonesPerPage - phonesPerPage;\n    const lastIndex = currentPage * phonesPerPage;\n\n    return (\n      <div>\n        {isLoaded\n          ? (\n            <main className=\"page-content\">\n              <div className=\"filter\">\n                <div>\n                  <label htmlFor=\"filter-input\">\n                    Search:\n                    <input\n                      type=\"text\"\n                      id=\"filter-input\"\n                      className=\"filter__input\"\n                      value={filterValue}\n                      onChange={this.handleFilter}\n                    />\n                  </label>\n                </div>\n\n                <div>\n                  <label htmlFor=\"sort-field\">\n                    Sort by:\n                    <select\n                      id=\"sort-field\"\n                      name=\"sort-field\"\n                      className=\"filter__selector\"\n                      onChange={this.getSortedPhones}\n                    >\n                      <option value=\"age\">\n                        Newest\n                      </option>\n\n                      <option value=\"alphabet\">\n                        Alphabetical\n                      </option>\n                    </select>\n                  </label>\n                </div>\n              </div>\n\n              <PhoneCatalog\n                phones={visiblePhones.slice(firstIndex, lastIndex)}\n                addPhone={this.props.addPhone}\n              />\n            </main>\n          ) : (\n            <Loader\n              type=\"ThreeDots\"\n              color=\"#049dfcde\"\n              height=\"100\"\n              width=\"100\"\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nPhonesPage.propTypes = {\n  addPhone: PropTypes.func.isRequired,\n};\n\nexport default PhonesPage;\n","import React from 'react';\n\nconst HomePage = () => <h1 className=\"home-page-title\">Welcome!</h1>;\n\nexport default HomePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nclass PhoneDetails extends React.Component {\n  state = {\n    imageNumber: 0,\n  }\n\n  switchImage = (index) => {\n    this.setState({ imageNumber: index });\n  }\n\n  render() {\n    const { details, addPhone } = this.props;\n    const { imageNumber } = this.state;\n\n    return (\n      <div>\n        <img\n          src={details.images[imageNumber]}\n          alt=\"phone\"\n          className=\"increased-img\"\n        />\n\n        <h2 className=\"phone__title\">{details.name}</h2>\n\n        <p className=\"phone__description\">{details.description}</p>\n\n        <ul className=\"phone-thumbs\">\n          {details.images.map((image, index) => (\n            <li key={image}>\n              <img\n                onClick={() => this.switchImage(index)}\n                className={classnames('phone-thumbs__img', {\n                  selected: imageNumber === index,\n                })}\n                src={image}\n                alt=\"phone\"\n              />\n            </li>\n          ))}\n        </ul>\n        <button\n          type=\"button\"\n          className=\"cart-btn remove-btn\"\n          onClick={() => addPhone(details)}\n        >\n          Add to basket\n        </button>\n      </div>\n    );\n  }\n}\n\nPhoneDetails.propTypes = {\n  details: PropTypes.objectOf(PropTypes.object).isRequired,\n  addPhone: PropTypes.func.isRequired,\n};\n\nexport default PhoneDetails;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nimport getData from '../api/getData';\nimport PhoneDetails from './PhoneDetails';\n\nclass PhoneDetailsPage extends React.Component {\n  state = {\n    phoneDetails: {},\n    isLoaded: false,\n    error: '',\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = async() => {\n    const { phoneId } = this.props;\n\n    try {\n      const phoneDetails = await getData(`/${phoneId}`);\n\n      this.setState({\n        phoneDetails,\n        isLoaded: true,\n      });\n    } catch (error) {\n      this.setState({ error });\n    }\n  }\n\n  render() {\n    const { phoneDetails, isLoaded, error } = this.state;\n\n    return (\n      <div>\n        {error\n          ? (<h2>Phone was not found</h2>)\n          : (\n            <>\n              {isLoaded\n                ? (\n                  <PhoneDetails\n                    details={phoneDetails}\n                    addPhone={this.props.addPhone}\n                  />\n                ) : (\n                  <Loader\n                    type=\"ThreeDots\"\n                    color=\"#049dfcde\"\n                    height=\"100\"\n                    width=\"100\"\n                  />\n                )\n              }\n            </>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nPhoneDetailsPage.propTypes = {\n  phoneId: PropTypes.string.isRequired,\n  addPhone: PropTypes.func.isRequired,\n};\n\nexport default PhoneDetailsPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Basket = ({ selectedPhones, removePhone }) => (\n  <div>\n    <h1 className=\"basket-title\">Added items</h1>\n\n    {selectedPhones.length < 1\n      ? <p className=\"basket-text\">Shopping Cart is empty</p>\n      : (\n        <ul className=\"shopping-list\">\n          {selectedPhones.map(phone => (\n            <li className=\"phone-card\">\n              <Link to={`/phones/${phone.id}`}>\n                <img\n                  src={phone.image}\n                  alt=\"phone\"\n                  className=\"shopping-list__img\"\n                />\n              </Link>\n\n              <Link\n                to={`/phones/${phone.id}`}\n                className=\"shopping-list__item-link\"\n              >\n                {phone.id}\n              </Link>\n\n              <div>\n                {`${phone.quantity} item(s)`}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"cart-btn remove-btn\"\n                onClick={() => removePhone(phone.id)}\n              >\n                remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      )\n    }\n  </div>\n);\n\nBasket.propTypes = {\n  selectedPhones: PropTypes.arrayOf(PropTypes.object).isRequired,\n  removePhone: PropTypes.func.isRequired,\n};\n\nexport default Basket;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Home = () => (\n  <>\n    <h1>Page is not found</h1>\n    <p>Please, return to the </p>\n    <NavLink to=\"/\">Home page</NavLink>\n  </>\n);\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport { Route, Switch, NavLink } from 'react-router-dom';\n\nimport PhonesPage from './components/PhonesPage';\nimport HomePage from './components/HomePage';\nimport PhoneDetailsPage from './components/PhoneDetailsPage';\nimport Basket from './components/Basket';\nimport NotFoundPage from './components/NotFoundPage';\n\nclass App extends React.Component {\n  state = {\n    selectedPhones: [],\n  }\n\n  addPhone = (currentPhone) => {\n    this.setState((prevState) => {\n      const updatedPhones = prevState.selectedPhones\n        .find(phone => phone.id === currentPhone.id)\n        ? (\n          prevState.selectedPhones.map(phone => (\n            phone.id === currentPhone.id\n              ? {\n                ...phone,\n                quantity: phone.quantity + 1,\n              }\n              : phone\n          ))\n        ) : (\n          [...prevState.selectedPhones, {\n            id: currentPhone.id,\n            quantity: 1,\n            image: currentPhone.imageUrl || currentPhone.images[0],\n          }]\n        );\n\n      return {\n        selectedPhones: updatedPhones,\n      };\n    });\n  };\n\n  removePhone = (currentPhone) => {\n    this.setState(prevState => ({\n      selectedPhones: prevState.selectedPhones\n        .filter(phone => phone.id !== currentPhone),\n    }));\n  };\n\n  render() {\n    const { selectedPhones } = this.state;\n\n    return (\n      <div className=\"App\">\n        <nav className=\"navigation\">\n          <ul>\n            <li className=\"navigation__list-paragraph\">\n              <NavLink\n                to=\"/\"\n                exact\n                className=\"navigation__link\"\n                activeClassName=\"is-active\"\n              >\n                Home\n              </NavLink>\n            </li>\n\n            <li className=\"navigation__list-paragraph\">\n              <NavLink\n                to=\"/phones\"\n                exact\n                className=\"navigation__link\"\n                activeClassName=\"is-active\"\n              >\n                Phones\n              </NavLink>\n            </li>\n\n            <li className=\"navigation__list-paragraph\">\n              <NavLink\n                to=\"/basket\"\n                exact\n                className=\"navigation__link\"\n                activeClassName=\"is-active\"\n              >\n                Basket\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            component={HomePage}\n          />\n\n          <Route\n            path=\"/phones\"\n            exact\n            render={() => (\n              <PhonesPage\n                addPhone={this.addPhone}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/phones/:phoneId\"\n            render={({ match }) => (\n              <PhoneDetailsPage\n                phoneId={match.params.phoneId}\n                addPhone={this.addPhone}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/basket\"\n            exact\n            render={() => (\n              <Basket\n                selectedPhones={selectedPhones}\n                removePhone={this.removePhone}\n              />\n            )}\n          />\n\n          <Route component={NotFoundPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}